@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');

:root {
    color-scheme: light;
    --in: 0.7206 0.191 231.6;
    --su: 64.8% 0.150 160;
    --wa: 0.8471 0.199 83.87;
    --er: 0.7176 0.221 22.18;
    --pc: 0.89824 0.06192 275.75;
    --ac: 0.15352 0.0368 183.61;
    --inc: 0 0 0;
    --suc: 0 0 0;
    --wac: 0 0 0;
    --erc: 0 0 0;
    --rounded-box: 1rem;
    --rounded-btn: 0.5rem;
    --rounded-badge: 1.9rem;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --p: 0.4912 0.3096 275.75;
    --s: 0.6971 0.329 342.55;
    --sc: 0.9871 0.0106 342.55;
    --a: 0.7676 0.184 183.61;
    --n: 0.321785 0.02476 255.701624;
    --nc: 0.894994 0.011585 252.096176;
    --b1: 1 0 0;
    --b2: 0.961151 0 0;
    --b3: 0.924169 0.00108 197.137559;
    --bc: 0.278078 0.029596 256.847952
}

@media (prefers-color-scheme:dark) {
    :root {
        color-scheme: dark;
        --in: 0.7206 0.191 231.6;
        --su: 64.8% 0.150 160;
        --wa: 0.8471 0.199 83.87;
        --er: 0.7176 0.221 22.18;
        --pc: 0.13138 0.0392 275.75;
        --sc: 0.1496 0.052 342.55;
        --ac: 0.14902 0.0334 183.61;
        --inc: 0 0 0;
        --suc: 0 0 0;
        --wac: 0 0 0;
        --erc: 0 0 0;
        --rounded-box: 1rem;
        --rounded-btn: 0.5rem;
        --rounded-badge: 1.9rem;
        --animation-btn: 0.25s;
        --animation-input: .2s;
        --btn-focus-scale: 0.95;
        --border-btn: 1px;
        --tab-border: 1px;
        --tab-radius: 0.5rem;
        --p: 0.6569 0.196 275.75;
        --s: 0.748 0.26 342.55;
        --a: 0.7451 0.167 183.61;
        --n: 0.313815 0.021108 254.139175;
        --nc: 0.746477 0.0216 264.435964;
        --b1: 0.253267 0.015896 252.417568;
        --b2: 0.232607 0.013807 253.100675;
        --b3: 0.211484 0.01165 254.087939;
        --bc: 0.746477 0.0216 264.435964
    }
}

[data-theme=light] {
    color-scheme: light;
    --in: 0.7206 0.191 231.6;
    --su: 64.8% 0.150 160;
    --wa: 0.8471 0.199 83.87;
    --er: 0.7176 0.221 22.18;
    --pc: 0.89824 0.06192 275.75;
    --ac: 0.15352 0.0368 183.61;
    --inc: 0 0 0;
    --suc: 0 0 0;
    --wac: 0 0 0;
    --erc: 0 0 0;
    --rounded-box: 1rem;
    --rounded-btn: 0.5rem;
    --rounded-badge: 1.9rem;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --p: 0.4912 0.3096 275.75;
    --s: 0.6971 0.329 342.55;
    --sc: 0.9871 0.0106 342.55;
    --a: 0.7676 0.184 183.61;
    --n: 0.321785 0.02476 255.701624;
    --nc: 0.894994 0.011585 252.096176;
    --b1: 1 0 0;
    --b2: 0.961151 0 0;
    --b3: 0.924169 0.00108 197.137559;
    --bc: 0.278078 0.029596 256.847952
}

*,
::after,
::before {
    box-sizing: border-box;
    border-width: 0;
    border-style: solid;
    border-color: currentColor
}

html {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-feature-settings: normal;
    font-variation-settings: normal
}

body {
    font-family: 'Roboto', sans-serif;
    margin: 0;
    line-height: inherit
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-size: inherit;
    font-weight: inherit
}

a {
    color: inherit;
    text-decoration: inherit
}

button,
input,
textarea {
    font-family: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    font-size: 100%;
    font-weight: inherit;
    line-height: inherit;
    color: inherit;
    margin: 0;
    padding: 0
}

button {
    text-transform: none
}

[type=button],
[type=reset],
[type=submit],
button {
    -webkit-appearance: button;
    background-color: transparent;
    background-image: none
}


::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
    height: auto
}

figure,
h1,
h2,
h3,
h4,
h5,
h6,
p {
    margin: 0
}

menu,
ul {
    list-style: none;
    margin: 0;
    padding: 0
}

textarea {
    resize: vertical
}

input::placeholder,
textarea::placeholder {
    opacity: 1;
    color: #9ca3af
}

[role=button],
button {
    cursor: pointer
}


img,
svg {
    display: block;
    vertical-align: middle
}

img {
    max-width: 100%;
    height: auto
}

:root,
[data-theme] {
    background-color: var(--fallback-b1, oklch(var(--b1)/1));
    color: var(--fallback-bc, oklch(var(--bc)/1))
}


html {
    -webkit-tap-highlight-color: transparent
}

*,
::after,
::before {
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgb(59 130 246 / 0.5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000
}


.avatar {
    position: relative;
    display: inline-flex
}

.avatar>div {
    display: block;
    aspect-ratio: 1/1;
    overflow: hidden
}

.avatar img {
    height: 100%;
    width: 100%;
    object-fit: cover
}

.avatar.placeholder>div {
    display: flex;
    align-items: center;
    justify-content: center
}

@media (hover:hover) {
    .link-hover:hover {
        text-decoration-line: underline
    }

    .label a:hover {
        --tw-text-opacity: 1;
        color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)))
    }

    .menu li>:not(ul):not(.menu-title):not(details):active {
        --tw-bg-opacity: 1;
        background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
        --tw-text-opacity: 1;
        color: var(--fallback-nc, oklch(var(--nc)/var(--tw-text-opacity)))
    }
}

.btn {
    display: inline-flex;
    height: 3rem;
    min-height: 3rem;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-user-select: none;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    border-radius: var(--rounded-btn, .5rem);
    border-color: transparent;
    border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
    padding-left: 1rem;
    padding-right: 1rem;
    text-align: center;
    font-size: .875rem;
    line-height: 1em;
    gap: .5rem;
    font-weight: 600;
    text-decoration-line: none;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    border-width: var(--border-btn, 1px);
    animation: button-pop var(--animation-btn, .25s) ease-out;
    transition-property: color, background-color, border-color, opacity, box-shadow, transform;
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: var(--fallback-bc, oklch(var(--bc)/1));
    background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
    --tw-bg-opacity: 1;
    --tw-border-opacity: 1
}


.card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem)
}


.card-body {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    padding: var(--padding-card, 2rem);
    gap: .5rem
}

.card-body :where(p) {
    flex-grow: 1
}

.card-actions {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    gap: .5rem
}

.card figure {
    display: flex;
    align-items: center;
    justify-content: center
}


.carousel {
    display: inline-flex;
    overflow-x: scroll;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    -ms-overflow-style: none;
    scrollbar-width: none
}

.carousel-item {
    box-sizing: content-box;
    display: flex;
    flex: none;
    scroll-snap-align: start
}

.carousel-center .carousel-item {
    scroll-snap-align: center
}


.dropdown {
    position: relative;
    display: inline-block
}


.dropdown .dropdown-content {
    position: absolute
}

.dropdown:is(:not(details)) .dropdown-content {
    visibility: hidden;
    opacity: 0;
    transform-origin: top;
    --tw-scale-x: .95;
    --tw-scale-y: .95;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    transition-duration: .2s
}

.dropdown-end .dropdown-content {
    inset-inline-end: 0
}

.dropdown-left .dropdown-content {
    bottom: auto;
    inset-inline-end: 100%;
    top: 0;
    transform-origin: right
}

.dropdown-end.dropdown-left .dropdown-content {
    bottom: 0;
    top: auto
}

.dropdown:focus-within .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content {
    visibility: visible;
    opacity: 1
}

@media (hover:hover) {
    .dropdown.dropdown-hover:hover .dropdown-content {
        visibility: visible;
        opacity: 1
    }

    .btn:hover {
        --tw-border-opacity: 1;
        border-color: var(--fallback-b3, oklch(var(--b3)/var(--tw-border-opacity)));
        --tw-bg-opacity: 1;
        background-color: var(--fallback-b3, oklch(var(--b3)/var(--tw-bg-opacity)))
    }

    @supports (color:color-mix(in oklab, black, black)) {
        .btn:hover {
            background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%, #000);
            border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%, #000)
        }
    }

    @supports not (color:oklch(0 0 0)) {
        .btn:hover {
            background-color: var(--btn-color, var(--fallback-b2));
            border-color: var(--btn-color, var(--fallback-b2))
        }
    }

    .btn.glass:hover {
        --glass-opacity: 25%;
        --glass-border-opacity: 15%
    }

    .btn-ghost:hover {
        border-color: transparent
    }

    @supports (color:oklch(0 0 0)) {
        .btn-ghost:hover {
            background-color: var(--fallback-bc, oklch(var(--bc)/.2))
        }
    }

    .btn-link:hover {
        border-color: transparent;
        background-color: transparent;
        text-decoration-line: underline
    }

    @supports (color:color-mix(in oklab, black, black)) {
        .btn-outline.btn-primary:hover {
            background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p)/1)) 90%, #000);
            border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p)/1)) 90%, #000)
        }
    }

    @supports (color:color-mix(in oklab, black, black)) {
        .btn-outline.btn-secondary:hover {
            background-color: color-mix(in oklab, var(--fallback-s, oklch(var(--s)/1)) 90%, #000);
            border-color: color-mix(in oklab, var(--fallback-s, oklch(var(--s)/1)) 90%, #000)
        }
    }

    @supports (color:color-mix(in oklab, black, black)) {
        .btn-outline.btn-accent:hover {
            background-color: color-mix(in oklab, var(--fallback-a, oklch(var(--a)/1)) 90%, #000);
            border-color: color-mix(in oklab, var(--fallback-a, oklch(var(--a)/1)) 90%, #000)
        }
    }

    @supports (color:color-mix(in oklab, black, black)) {
        .btn-outline.btn-success:hover {
            background-color: color-mix(in oklab, var(--fallback-su, oklch(var(--su)/1)) 90%, #000);
            border-color: color-mix(in oklab, var(--fallback-su, oklch(var(--su)/1)) 90%, #000)
        }
    }

    @supports (color:color-mix(in oklab, black, black)) {
        .btn-outline.btn-info:hover {
            background-color: color-mix(in oklab, var(--fallback-in, oklch(var(--in)/1)) 90%, #000);
            border-color: color-mix(in oklab, var(--fallback-in, oklch(var(--in)/1)) 90%, #000)
        }
    }

    @supports (color:color-mix(in oklab, black, black)) {
        .btn-outline.btn-warning:hover {
            background-color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa)/1)) 90%, #000);
            border-color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa)/1)) 90%, #000)
        }
    }

    @supports (color:color-mix(in oklab, black, black)) {
        .btn-outline.btn-error:hover {
            background-color: color-mix(in oklab, var(--fallback-er, oklch(var(--er)/1)) 90%, #000);
            border-color: color-mix(in oklab, var(--fallback-er, oklch(var(--er)/1)) 90%, #000)
        }
    }

    .btn:disabled:hover,
    .btn[disabled]:hover {
        --tw-border-opacity: 0;
        background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
        --tw-bg-opacity: 0.2;
        color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
        --tw-text-opacity: 0.2
    }

    @supports (color:color-mix(in oklab, black, black)) {

        .btn:is(input[type=checkbox]: checked):hover,
        .btn:is(input[type=radio]:checked):hover {
            background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p)/1)) 90%, #000);
            border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p)/1)) 90%, #000)
        }
    }

    .dropdown.dropdown-hover:hover .dropdown-content {
        --tw-scale-x: 1;
        --tw-scale-y: 1;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    @supports (color:oklch(0 0 0)) {

        :where(.menuli: not(.menu-title):not(.disabled)>:not(ul):not(details):not(.menu-title)):not(.active):hover,
        :where(.menuli:not(.menu-title):not(.disabled)>details>summary:not(.menu-title)):not(.active):hover {
            background-color: var(--fallback-bc, oklch(var(--bc)/.1))
        }
    }
}

.footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    column-gap: 1rem;
    row-gap: 2.5rem;
    font-size: .875rem;
    line-height: 1.25rem
}

.footer>* {
    display: grid;
    place-items: start;
    gap: .5rem
}

.footer-center {
    place-items: center;
    text-align: center
}

.footer-center>* {
    place-items: center
}


.form-control {
    display: flex;
    flex-direction: column
}

.label {
    display: flex;
    -webkit-user-select: none;
    user-select: none;
    align-items: center;
    justify-content: space-between;
    padding-left: .25rem;
    padding-right: .25rem;
    padding-top: .5rem;
    padding-bottom: .5rem
}

.hero {
    display: grid;
    width: 100%;
    place-items: center;
    background-size: cover;
    background-position: center
}

.hero>* {
    grid-column-start: 1;
    grid-row-start: 1
}

.hero-overlay {
    grid-column-start: 1;
    grid-row-start: 1;
    height: 100%;
    width: 100%;
    background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-bg-opacity: 0.5
}

.hero-content {
    z-index: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    max-width: 80rem;
    gap: 1rem;
    padding: 1rem
}

.input {
    flex-shrink: 1;
    appearance: none;
    height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 1rem;
    line-height: 2;
    line-height: 1.5rem;
    border-radius: var(--rounded-btn, .5rem);
    border-width: 1px;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity)))
}


.link {
    cursor: pointer;
    text-decoration-line: underline
}

.link-hover {
    text-decoration-line: none
}

.menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    font-size: .875rem;
    line-height: 1.25rem;
    padding: .5rem
}

.menu :where(liul) {
    position: relative;
    white-space: nowrap;
    margin-inline-start: 1rem;
    padding-inline-start: .5rem
}

.menu :where(li:not(.menu-title)>:not(ul):not(details):not(.menu-title)) {
    display: grid;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: .5rem;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    -webkit-user-select: none;
    user-select: none
}

:where(.menuli) {
    position: relative;
    display: flex;
    flex-shrink: 0;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: stretch
}

.navbar {
    display: flex;
    align-items: center;
    padding: var(--navbar-padding, .5rem);
    min-height: 4rem;
    width: 100%
}

:where(.navbar>*) {
    display: inline-flex;
    align-items: center
}

.navbar-start {
    width: 50%;
    justify-content: flex-start
}

.navbar-center {
    flex-shrink: 0
}

.navbar-end {
    width: 50%;
    justify-content: flex-end
}

.textarea {
    min-height: 3rem;
    flex-shrink: 1;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: .5rem;
    padding-bottom: .5rem;
    font-size: .875rem;
    line-height: 1.25rem;
    line-height: 2;
    border-radius: var(--rounded-btn, .5rem);
    border-width: 1px;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-bg-opacity)))
}

.btn:active:focus,
.btn:active:hover {
    animation: button-pop 0s ease-out;
    transform: scale(var(--btn-focus-scale, .97))
}

@supports not (color:oklch(0 0 0)) {
    .btn {
        background-color: var(--btn-color, var(--fallback-b2));
        border-color: var(--btn-color, var(--fallback-b2))
    }

    .btn-primary {
        --btn-color: var(--fallback-p)
    }

    .btn-secondary {
        --btn-color: var(--fallback-s)
    }

    .btn-accent {
        --btn-color: var(--fallback-a)
    }

    .btn-neutral {
        --btn-color: var(--fallback-n)
    }

    .btn-info {
        --btn-color: var(--fallback-in)
    }

    .btn-success {
        --btn-color: var(--fallback-su)
    }

    .btn-warning {
        --btn-color: var(--fallback-wa)
    }

    .btn-error {
        --btn-color: var(--fallback-er)
    }
}

@supports (color:color-mix(in oklab, black, black)) {
    .btn-active {
        background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b3)) / var(--tw-bg-opacity, 1)) 90%, #000);
        border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b3)) / var(--tw-border-opacity, 1)) 90%, #000)
    }

    .btn-outline.btn-primary.btn-active {
        background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p)/1)) 90%, #000);
        border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p)/1)) 90%, #000)
    }

    .btn-outline.btn-secondary.btn-active {
        background-color: color-mix(in oklab, var(--fallback-s, oklch(var(--s)/1)) 90%, #000);
        border-color: color-mix(in oklab, var(--fallback-s, oklch(var(--s)/1)) 90%, #000)
    }

    .btn-outline.btn-accent.btn-active {
        background-color: color-mix(in oklab, var(--fallback-a, oklch(var(--a)/1)) 90%, #000);
        border-color: color-mix(in oklab, var(--fallback-a, oklch(var(--a)/1)) 90%, #000)
    }

    .btn-outline.btn-success.btn-active {
        background-color: color-mix(in oklab, var(--fallback-su, oklch(var(--su)/1)) 90%, #000);
        border-color: color-mix(in oklab, var(--fallback-su, oklch(var(--su)/1)) 90%, #000)
    }

    .btn-outline.btn-info.btn-active {
        background-color: color-mix(in oklab, var(--fallback-in, oklch(var(--in)/1)) 90%, #000);
        border-color: color-mix(in oklab, var(--fallback-in, oklch(var(--in)/1)) 90%, #000)
    }

    .btn-outline.btn-warning.btn-active {
        background-color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa)/1)) 90%, #000);
        border-color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa)/1)) 90%, #000)
    }

    .btn-outline.btn-error.btn-active {
        background-color: color-mix(in oklab, var(--fallback-er, oklch(var(--er)/1)) 90%, #000);
        border-color: color-mix(in oklab, var(--fallback-er, oklch(var(--er)/1)) 90%, #000)
    }
}

.btn:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px
}

.btn-primary {
    --tw-text-opacity: 1;
    color: var(--fallback-pc, oklch(var(--pc)/var(--tw-text-opacity)));
    outline-color: var(--fallback-p, oklch(var(--p)/1))
}

@supports (color:oklch(0 0 0)) {
    .btn-primary {
        --btn-color: var(--p)
    }
}


.btn-ghost {
    border-width: 1px;
    border-color: transparent;
    background-color: transparent;
    color: currentColor;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: currentColor
}



.card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset
}


.card-title {
    display: flex;
    align-items: center;
    gap: .5rem;
    font-size: 1.25rem;
    line-height: 1.75rem;
    font-weight: 600
}


.carousel::-webkit-scrollbar {
    display: none
}

@keyframes checkmark {
    0% {
        background-position-y: 5px
    }

    50% {
        background-position-y: -2px
    }

    100% {
        background-position-y: 0
    }
}

.dropdown:focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.footer-title {
    margin-bottom: .5rem;
    font-weight: 700;
    text-transform: uppercase;
    opacity: .6
}

.label-text {
    font-size: .875rem;
    line-height: 1.25rem;
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)))
}

.label-text-alt {
    font-size: .75rem;
    line-height: 1rem;
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)))
}

.input input:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.input[list]::-webkit-calendar-picker-indicator {
    line-height: 1em
}

.input-bordered {
    border-color: var(--fallback-bc, oklch(var(--bc)/.2))
}

.input:focus,
.input:focus-within {
    box-shadow: none;
    border-color: var(--fallback-bc, oklch(var(--bc)/.2));
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--fallback-bc, oklch(var(--bc)/.2))
}

.input-ghost {
    --tw-bg-opacity: 0.05
}

.input-ghost:focus,
.input-ghost:focus-within {
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
    box-shadow: none
}

.input-primary {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p)/var(--tw-border-opacity)))
}

.input-primary:focus,
.input-primary:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p)/var(--tw-border-opacity)));
    outline-color: var(--fallback-p, oklch(var(--p)/1))
}

.input:disabled,
.input[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-bg-opacity)));
    color: var(--fallback-bc, oklch(var(--bc)/.4))
}

.input:disabled::placeholder,
.input[disabled]::placeholder {
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-placeholder-opacity)));
    --tw-placeholder-opacity: 0.2
}

.input::-webkit-date-and-time-value {
    text-align: inherit
}

.link-primary {
    --tw-text-opacity: 1;
    color: var(--fallback-p, oklch(var(--p)/var(--tw-text-opacity)))
}

@supports (color:color-mix(in oklab, black, black)) {
    @media (hover: hover) {
        .link-primary:hover {
            color: color-mix(in oklab, var(--fallback-p, oklch(var(--p)/1)) 80%, #000)
        }

        .link-secondary:hover {
            color: color-mix(in oklab, var(--fallback-s, oklch(var(--s)/1)) 80%, #000)
        }

        .link-accent:hover {
            color: color-mix(in oklab, var(--fallback-a, oklch(var(--a)/1)) 80%, #000)
        }

        .link-neutral:hover {
            color: color-mix(in oklab, var(--fallback-n, oklch(var(--n)/1)) 80%, #000)
        }

        .link-success:hover {
            color: color-mix(in oklab, var(--fallback-su, oklch(var(--su)/1)) 80%, #000)
        }

        .link-info:hover {
            color: color-mix(in oklab, var(--fallback-in, oklch(var(--in)/1)) 80%, #000)
        }

        .link-warning:hover {
            color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa)/1)) 80%, #000)
        }

        .link-error:hover {
            color: color-mix(in oklab, var(--fallback-er, oklch(var(--er)/1)) 80%, #000)
        }
    }
}

.link-neutral {
    --tw-text-opacity: 1;
    color: var(--fallback-n, oklch(var(--n)/var(--tw-text-opacity)))
}

.link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.link:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px
}

.textarea-bordered {
    border-color: var(--fallback-bc, oklch(var(--bc)/.2))
}

.textarea:focus {
    box-shadow: none;
    border-color: var(--fallback-bc, oklch(var(--bc)/.2));
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--fallback-bc, oklch(var(--bc)/.2))
}

.textarea-ghost {
    --tw-bg-opacity: 0.05
}

.textarea-ghost:focus {
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
    box-shadow: none
}

.textarea-primary {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p)/var(--tw-border-opacity)))
}

.textarea-primary:focus {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p)/var(--tw-border-opacity)));
    outline-color: var(--fallback-p, oklch(var(--p)/1))
}

.textarea:disabled,
.textarea[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2, oklch(var(--b2)/var(--tw-bg-opacity)));
    --tw-text-opacity: 0.2
}

.textarea:disabled::placeholder,
.textarea[disabled]::placeholder {
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-placeholder-opacity)));
    --tw-placeholder-opacity: 0.2
}

@keyframes toast-pop {
    0% {
        transform: scale(.9);
        opacity: 0
    }

    100% {
        transform: scale(1);
        opacity: 1
    }
}

@keyframes bounce {

    0%,
    100% {
        transform: translateY(-25%);
        animation-timing-function: cubic-bezier(.8, 0, 1, 1)
    }

    50% {
        transform: none;
        animation-timing-function: cubic-bezier(0, 0, .2, 1)
    }
}

@keyframes ping {

    100%,
    75% {
        transform: scale(2);
        opacity: 0
    }
}

@keyframes pulse {
    50% {
        opacity: .5
    }
}

@keyframes spin {
    to {
        transform: rotate(360deg)
    }
}

.rounded-box {
    border-radius: var(--rounded-box, 1rem)
}


.bg-base-100 {
    background-color: var(--fallback-b1, oklch(var(--b1)/1))
}


.bg-base-200 {
    background-color: var(--fallback-b2, oklch(var(--b2)/1))
}

.text-base-content {
    color: var(--fallback-bc, oklch(var(--bc)/1))
}

.text-neutral-content {
    color: var(--fallback-nc, oklch(var(--nc)/1))
}


.text-primary {
    color: var(--fallback-p, oklch(var(--p)/1))
}


.glass {
    border: none;
    -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
    backdrop-filter: blur(var(--glass-blur, 40px));
    background-color: transparent;
    background-image: linear-gradient(135deg, rgb(255 255 255 / var(--glass-opacity, 30%)) 0, rgb(0 0 0 / 0) 100%), linear-gradient(var(--glass-reflex-degree, 100deg), rgb(255 255 255 / var(--glass-reflex-opacity, 10%)) 25%, rgb(0 0 0 / 0) 25%);
    box-shadow: 0 0 0 1px rgb(255 255 255 / var(--glass-border-opacity, 10%)) inset, 0 0 0 2px rgb(0 0 0 / 5%);
    text-shadow: 0 1px rgb(0 0 0 / var(--glass-text-shadow-opacity, 5%))
}


.btn-wide {
    width: 16rem
}


.menu-sm :where(li:not(.menu-title)>:not(ul):not(details):not(.menu-title)) {
    border-radius: var(--rounded-btn, .5rem);
    padding-left: .75rem;
    padding-right: .75rem;
    padding-top: .25rem;
    padding-bottom: .25rem;
    font-size: .875rem;
    line-height: 1.25rem
}

.menu-horizontal {
    display: inline-flex;
    flex-direction: row;
}

.menu :where(li:not(.menu-title)> :not(ul):not(details):not(.menu-title)),
.menu :where(li:not(.menu-title)>details>summary:not(.menu-title)) {
    border-radius: var(--rounded-btn, .5rem);
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: .5rem;
    padding-bottom: .5rem;
    text-align: start;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: .2s;
    text-wrap: balance
}